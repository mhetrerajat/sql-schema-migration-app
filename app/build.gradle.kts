import org.gradle.launcher.daemon.protocol.Build

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application

    // Formatting
    id("com.diffplug.spotless") version "7.0.2"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Liquibase
    implementation(libs.liquibase)

    // Lombok
    compileOnly(libs.lombok)
    annotationProcessor(libs.lombok)
    testCompileOnly(libs.lombok)
    testAnnotationProcessor(libs.lombok)

    // Dagger
    implementation(libs.dagger)
    annotationProcessor(libs.dagger.compiler)

    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // Mockito
    testImplementation(libs.mockito.core)
    testImplementation(libs.mockito.junit.jupiter)

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// Spotless Formatting Configuration
spotless {
    java {
        target("src/*/java/**/*.java")
        removeUnusedImports()
        importOrder()
        endWithNewline()
        palantirJavaFormat("2.39.0").formatJavadoc(true)
        trimTrailingWhitespace()
        formatAnnotations()
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.mhetrerajat.App"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    jvmArgs = arrayOf(
        "-XX:+EnableDynamicAgentLoading"  // Address Mockito warning
    ).toMutableList()
}

// Add check dependency
tasks.named("check") {
    dependsOn("spotlessCheck")
}

// Add format dependency
tasks.named("build") {
    dependsOn("spotlessApply")
}